openapi: 3.1.0
info:
  title: CogniForge Accounts API
  version: 1.0.0
  description: |
    واجهة عقد-أولاً للحسابات. حافظ على التوافق الخلفي. استخدم سياسة إيقاف معلنة وSunset.
    
    Contract-first accounts API. Maintain backward compatibility. Use explicit deprecation policy and Sunset headers.
    
    **التوافق الخلفي (Backward Compatibility):**
    - إضافة حقول اختيارية: مسموح
    - إزالة حقول: ممنوع (استخدم deprecation)
    - تغيير أنواع البيانات: ممنوع
    - تغيير السلوك: يتطلب نسخة جديدة
    
  contact:
    name: CogniForge API Team
    email: benmerahhoussam16@gmail.com
    url: https://api.cogniforge.com
  license:
    name: Proprietary
    url: https://cogniforge.com/license

servers:
  - url: https://api.cogniforge.com/v1
    description: الإنتاج (Production)
  - url: https://sandbox.api.cogniforge.com/v1
    description: صندوق الرمل (Sandbox)
  - url: http://localhost:5000/v1
    description: التطوير المحلي (Local Development)

tags:
  - name: Accounts
    description: إدارة الحسابات (Account Management)
  - name: Payments
    description: إدارة المدفوعات (Payment Management)

security:
  - OAuth2: [read, write]
  - BearerAuth: []

paths:
  /accounts:
    get:
      tags: [Accounts]
      summary: استرجاع قائمة الحسابات (List Accounts)
      description: |
        استرجاع قائمة الحسابات مع دعم التصفح والترشيح والترتيب
        
        Retrieve paginated list of accounts with filtering and sorting support.
        
        **معدل الطلبات (Rate Limiting):**
        - 600 طلب/دقيقة لكل مفتاح API
        - 10,000 طلب/ساعة لكل مستأجر
        
      operationId: listAccounts
      parameters:
        - name: cursor
          in: query
          description: مؤشر التصفح للصفحة التالية (Pagination cursor for next page)
          schema:
            type: string
            example: "eyJpZCI6MTIzNDU2fQ=="
        - name: limit
          in: query
          description: عدد العناصر المطلوبة (Number of items to return)
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
        - name: filter[status]
          in: query
          description: تصفية حسب الحالة (Filter by status)
          schema:
            type: string
            enum: [active, suspended, closed]
        - name: filter[created_after]
          in: query
          description: تصفية حسب تاريخ الإنشاء (Filter by creation date)
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: ترتيب النتائج (Sort results)
          schema:
            type: string
            enum: [created_at, -created_at, name, -name]
            default: -created_at
        - name: fields
          in: query
          description: حقول متناثرة - اختر الحقول المطلوبة فقط (Sparse fieldsets)
          schema:
            type: string
            example: "id,name,status,created_at"
      responses:
        '200':
          description: نجاح (Success)
          headers:
            X-Request-Id:
              description: معرف الطلب الفريد (Unique request identifier)
              schema:
                type: string
                example: "req_1a2b3c4d5e6f"
            X-RateLimit-Limit:
              description: حد المعدل (Rate limit)
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: الطلبات المتبقية (Remaining requests)
              schema:
                type: integer
            X-RateLimit-Reset:
              description: وقت إعادة تعيين الحد (Rate limit reset time)
              schema:
                type: integer
                format: unix-timestamp
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=60"
            ETag:
              description: علامة الكيان للتخزين المؤقت (Entity tag for caching)
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccounts'
              examples:
                success:
                  value:
                    data:
                      - id: "acc_1a2b3c4d"
                        name: "حساب العميل الأول"
                        status: "active"
                        balance: 10000
                        currency: "USD"
                        created_at: "2025-01-15T10:30:00Z"
                        updated_at: "2025-01-20T14:45:00Z"
                    pagination:
                      next_cursor: "eyJpZCI6MTIzNDU3fQ=="
                      has_more: true
                      count: 50
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      tags: [Accounts]
      summary: إنشاء حساب جديد (Create Account)
      description: |
        إنشاء حساب جديد مع دعم التماثل (Idempotency)
        
        Create a new account with idempotency support.
        
        **التماثل (Idempotency):**
        استخدم رأس Idempotency-Key لضمان أن الطلب المكرر لا ينشئ موارد مكررة
      operationId: createAccount
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: مفتاح التماثل (Idempotency key)
          schema:
            type: string
            minLength: 16
            maxLength: 64
            pattern: '^[a-zA-Z0-9_-]+$'
            example: "idp_1a2b3c4d5e6f7g8h"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
            examples:
              individual:
                value:
                  name: "أحمد محمد"
                  type: "individual"
                  currency: "USD"
                  metadata:
                    customer_id: "cust_123456"
                    source: "web"
      responses:
        '201':
          description: تم الإنشاء بنجاح (Created successfully)
          headers:
            X-Request-Id:
              schema:
                type: string
            Location:
              description: رابط المورد الجديد (New resource location)
              schema:
                type: string
                example: "/v1/accounts/acc_1a2b3c4d"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: تضارب - مفتاح التماثل مستخدم مسبقاً (Conflict - Idempotency key already used)
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '422':
          $ref: '#/components/responses/ValidationError'

  /accounts/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        description: معرف الحساب (Account identifier)
        schema:
          type: string
          pattern: '^acc_[a-zA-Z0-9]+$'
          example: "acc_1a2b3c4d"
    get:
      tags: [Accounts]
      summary: استرجاع تفاصيل حساب (Get Account)
      operationId: getAccount
      parameters:
        - name: If-None-Match
          in: header
          description: ETag للتخزين المؤقت الشرطي (ETag for conditional caching)
          schema:
            type: string
      responses:
        '200':
          description: نجاح (Success)
          headers:
            X-Request-Id:
              schema:
                type: string
            ETag:
              schema:
                type: string
            Cache-Control:
              schema:
                type: string
                example: "private, max-age=300"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '304':
          description: لم يتم التعديل (Not Modified)
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags: [Accounts]
      summary: تحديث حساب جزئياً (Partial Update Account)
      operationId: updateAccount
      parameters:
        - name: If-Match
          in: header
          description: ETag للتحديث الشرطي (ETag for conditional update)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: تم التحديث بنجاح (Updated successfully)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          description: فشل الشرط المسبق (Precondition Failed)
    delete:
      tags: [Accounts]
      summary: حذف حساب (Delete Account)
      operationId: deleteAccount
      responses:
        '204':
          description: تم الحذف بنجاح (Deleted successfully)
        '404':
          $ref: '#/components/responses/NotFound'

  /payments:
    post:
      tags: [Payments]
      summary: إنشاء دفعة (Create Payment)
      description: |
        إنشاء دفعة جديدة مع دعم التماثل
        
        **ملاحظة أمنية:** يتطلب نطاق 'payments:write'
      operationId: createPayment
      security:
        - OAuth2: [payments:write]
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            type: string
            minLength: 16
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        '201':
          description: تم الإنشاء (Created)
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: تضارب مفتاح التماثل (Idempotency key conflict)

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: |
        OAuth 2.1 authentication
        
        استخدم نطاقات محددة لكل عملية
      flows:
        authorizationCode:
          authorizationUrl: https://auth.cogniforge.com/oauth/authorize
          tokenUrl: https://auth.cogniforge.com/oauth/token
          refreshUrl: https://auth.cogniforge.com/oauth/refresh
          scopes:
            read: قراءة الموارد (Read resources)
            write: كتابة الموارد (Write resources)
            admin: صلاحيات إدارية (Administrative privileges)
            payments:read: قراءة المدفوعات (Read payments)
            payments:write: إنشاء مدفوعات (Create payments)
        clientCredentials:
          tokenUrl: https://auth.cogniforge.com/oauth/token
          scopes:
            read: قراءة الموارد
            write: كتابة الموارد
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token

  schemas:
    PaginatedAccounts:
      type: object
      required: [data, pagination]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    PaginationInfo:
      type: object
      required: [has_more, count]
      properties:
        next_cursor:
          type: string
          nullable: true
          description: مؤشر الصفحة التالية (Next page cursor)
        previous_cursor:
          type: string
          nullable: true
          description: مؤشر الصفحة السابقة (Previous page cursor)
        has_more:
          type: boolean
          description: هل توجد صفحات إضافية (Are there more pages)
        count:
          type: integer
          description: عدد العناصر في هذه الصفحة (Items in current page)
        total:
          type: integer
          nullable: true
          description: إجمالي العناصر (اختياري) (Total items - optional)

    Account:
      type: object
      required: [id, name, status, balance, currency, created_at, updated_at]
      properties:
        id:
          type: string
          pattern: '^acc_[a-zA-Z0-9]+$'
          description: معرف الحساب الفريد (Unique account identifier)
          example: "acc_1a2b3c4d"
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: اسم الحساب (Account name)
          example: "حساب العميل الرئيسي"
        type:
          type: string
          enum: [individual, business]
          description: نوع الحساب (Account type)
          default: individual
        status:
          type: string
          enum: [active, suspended, closed]
          description: حالة الحساب (Account status)
          default: active
        balance:
          type: integer
          description: الرصيد بأصغر وحدة عملة (Balance in smallest currency unit)
          example: 10000
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: رمز العملة ISO 4217
          example: "USD"
        metadata:
          type: object
          additionalProperties: true
          description: بيانات وصفية مخصصة (Custom metadata)
          maxProperties: 50
        created_at:
          type: string
          format: date-time
          description: تاريخ الإنشاء (Creation timestamp)
        updated_at:
          type: string
          format: date-time
          description: تاريخ آخر تحديث (Last update timestamp)

    CreateAccountRequest:
      type: object
      required: [name, currency]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          example: "أحمد محمد"
        type:
          type: string
          enum: [individual, business]
          default: individual
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          example: "USD"
        metadata:
          type: object
          additionalProperties: true
          maxProperties: 50

    UpdateAccountRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        status:
          type: string
          enum: [active, suspended, closed]
        metadata:
          type: object
          additionalProperties: true
          maxProperties: 50

    Payment:
      type: object
      required: [id, status, amount, currency, created_at]
      properties:
        id:
          type: string
          pattern: '^pay_[a-zA-Z0-9]+$'
          example: "pay_1a2b3c4d"
        status:
          type: string
          enum: [pending, processing, settled, failed, cancelled]
          description: حالة الدفعة (Payment status)
        amount:
          type: integer
          minimum: 1
          description: المبلغ بأصغر وحدة (Amount in smallest unit)
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          example: "USD"
        destination_account_id:
          type: string
          pattern: '^acc_[a-zA-Z0-9]+$'
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreatePaymentRequest:
      type: object
      required: [amount, currency, destination_account_id]
      properties:
        amount:
          type: integer
          minimum: 1
          description: المبلغ بأصغر وحدة العملة (Amount in smallest currency unit)
          example: 5000
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          example: "USD"
        destination_account_id:
          type: string
          pattern: '^acc_[a-zA-Z0-9]+$'
          example: "acc_1a2b3c4d"
        description:
          type: string
          maxLength: 500
          example: "دفعة للخدمات المقدمة"
        metadata:
          type: object
          additionalProperties: true
          maxProperties: 50

    ProblemDetails:
      type: object
      description: RFC 7807 Problem Details for HTTP APIs
      required: [type, title, status]
      properties:
        type:
          type: string
          format: uri
          description: URI يعرف نوع المشكلة (URI identifying the problem type)
          example: "https://api.cogniforge.com/errors/rate-limited"
        title:
          type: string
          description: ملخص قصير للمشكلة (Short summary of the problem)
          example: "Rate Limited"
        status:
          type: integer
          description: رمز حالة HTTP (HTTP status code)
          example: 429
        detail:
          type: string
          description: شرح مفصل للمشكلة (Detailed explanation)
          example: "تم تجاوز حد المعدل. الرجاء المحاولة بعد دقيقة."
        instance:
          type: string
          format: uri
          description: URI يعرف نسخة محددة من المشكلة (URI for this specific occurrence)
          example: "/v1/accounts?cursor=xyz"
        request_id:
          type: string
          description: معرف الطلب للمتابعة (Request ID for tracking)
          example: "req_1a2b3c4d5e6f"
        timestamp:
          type: string
          format: date-time
          description: وقت حدوث الخطأ (Error occurrence time)

  responses:
    BadRequest:
      description: طلب غير صحيح (Bad Request)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: "https://api.cogniforge.com/errors/bad-request"
            title: "Bad Request"
            status: 400
            detail: "الطلب غير صحيح. تحقق من البيانات المرسلة."
            request_id: "req_1a2b3c4d"

    Unauthorized:
      description: غير مصرح (Unauthorized)
      headers:
        WWW-Authenticate:
          schema:
            type: string
            example: 'Bearer realm="CogniForge API", error="invalid_token"'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: "https://api.cogniforge.com/errors/unauthorized"
            title: "Unauthorized"
            status: 401
            detail: "المصادقة مطلوبة. قدم رمز وصول صالح."

    Forbidden:
      description: ممنوع (Forbidden)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    NotFound:
      description: غير موجود (Not Found)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    ValidationError:
      description: خطأ في التحقق (Validation Error)
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetails'
              - type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string

    RateLimited:
      description: تم تجاوز الحد (Rate Limited)
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer
        Retry-After:
          schema:
            type: integer
            description: عدد الثواني قبل المحاولة مجدداً (Seconds to wait before retry)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    InternalError:
      description: خطأ داخلي في الخادم (Internal Server Error)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
