---
# .github/workflows/ci.yml - Version 2.0 (Simplified for SQLite tests)
name: Python Application CI

"on":
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        env:
          FLASK_ENV: testing
          TESTING: "1"
          SECRET_KEY: test-secret-key-for-ci
        timeout-minutes: 10
        run: |
          echo "🧪 Running test suite..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          # Run pytest with timeout and optimized settings
          if timeout 600 pytest --verbose --tb=short \
                  --timeout=60 --timeout-method=thread \
                  -x --maxfail=5 \
                  --cov=app --cov-report=xml --cov-report=html \
                  --durations=10; then
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "✅ All tests passed successfully!"

            # Save coverage for AI analysis
            if [ -f coverage.xml ]; then
              echo "📊 Coverage report generated"
            fi

            echo "🎯 Test Status: SUCCESS"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            exit 0
          else
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "❌ Tests failed or timed out!"
            echo "📋 Please review the test output above"
            echo "💡 Tip: Use --durations=10 to see slowest tests"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            exit 1
          fi
