{
  "//": "Dev Container Configuration (Ultimate Optimized Edition)",
  "name": "CogniForge â€“ Multi-Platform Dev Env",
  "dockerComposeFile": [
    "../docker-compose.yml"
  ],
  "service": "web",
  "workspaceFolder": "/app",

  "remoteUser": "root",
  "containerUser": "root",
  "overrideCommand": false,

  "initializeCommand": "echo 'ðŸš€ Initializing CogniForge Dev Container...'",

  "postCreateCommand": "bash .devcontainer/on-create.sh",
  "postStartCommand": "bash .devcontainer/on-start.sh",
  "postAttachCommand": "bash .devcontainer/on-attach.sh",

  "userEnvProbe": "loginInteractiveShell",
  "waitFor": "postCreateCommand",

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "github.copilot",
        "github.copilot-chat",
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "eamodio.gitlens",
        "esbenp.prettier-vscode",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "streetsidesoftware.code-spell-checker",
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        "humao.rest-client"
      ],
      "settings": {
        "editor.formatOnSave": true,
        "files.autoSave": "onFocusChange",
        "git.autofetch": true,
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.analysis.typeCheckingMode": "basic",
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.fontSize": 14,
        "terminal.integrated.persistentSessionReviveProcess": "never",
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter"
        }
      }
    }
  },

  "forwardPorts": [5000, 8000, 8001],
  "portsAttributes": {
    "5000": { "label": "Flask Frontend (Web)" },
    "8000": { "label": "FastAPI (AI Core)" },
    "8001": { "label": "ChromaDB (Vector Memory)" }
  },

  "containerEnv": {
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    "PIP_NO_CACHE_DIR": "1",
    "PYTHONDONTWRITEBYTECODE": "1",
    "FORCE_COLOR": "1",

    "//": "Environment Setup Flags",
    "//": "SKIP_PIP_INSTALL: Packages already in Docker image via Dockerfile",
    "//": "SKIP_MIGRATIONS/SEED: User must configure .env with DATABASE_URL first",
    "SKIP_ENV_BOOTSTRAP": "false",
    "SKIP_PIP_INSTALL": "true",
    "SKIP_DB_WAIT": "true",
    "SKIP_MIGRATIONS": "true",
    "SKIP_SEED": "true",

    "//": "GitHub Codespaces & Gitpod Compatibility",
    "CODESPACES": "true",
    "GITPOD_WORKSPACE_ID": "${localEnv:GITPOD_WORKSPACE_ID}",

    "//": "Migration Control",
    "RUN_MIGRATIONS_DURING_CREATE": "false",
    "RUN_SEED_DURING_CREATE": "false",

    "//": "Application Runtime",
    "RUN_APP_ON_START": "false",
    "APP_START_CMD": "flask run --host=0.0.0.0 --port=8000",

    "//": "Database Connection (External Supabase)",
    "SHOW_MIGRATION_STATUS": "true",
    "DB_CONNECTION_TIMEOUT": "30"
  },

  "mounts": [
    "source=devcontainer-dind,target=/var/lib/docker,type=volume"
  ],

  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "moby": true
    },
    "ghcr.io/devcontainers/features/aws-cli:1": {},
    "ghcr.io/devcontainers/features/azure-cli:1": {},
    "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {}
  },

  "hostRequirements": {
    "cpus": 2,
    "memory": "4gb",
    "storage": "16gb"
  }
}
