#!/usr/bin/env bash
###############################################################################
# on-attach.sh
#
# ููููููุฐ ุนูุฏ ุฅุฑูุงู ูุญุฑุฑ (postAttachCommand).
# ุงููุฏู:
#   - ุนุฑุถ ุญุงูุฉ ุณุฑูุนุฉ ููุจูุฆุฉ.
#   - ูุญุต ุฌุงูุฒูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช (ุงุฎุชูุงุฑู).
#   - ุงุณุชุนุฑุงุถ ูุณุฎุฉ ุงูุชุฑุญูู ุงูุญุงููุฉ (ุฅู ููุฌุฏุช Alembic/Flask-Migrate).
#   - ุนุฏู ุชูููุฐ ุนูููุงุช ุซูููุฉ.
#
# ูุชุบูุฑุงุช:
#   SKIP_ATTACH_DB_CHECK=true    -> ุนุฏู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช
#   SHOW_MIGRATION_STATUS=true   -> ุนุฑุถ ุญุงูุฉ ุงูุชุฑุญููุงุช
###############################################################################

set -Eeuo pipefail

if [ -t 1 ]; then
  RED=$(printf '\033[31m'); GREEN=$(printf '\033[32m'); YELLOW=$(printf '\033[33m')
  CYAN=$(printf '\033[36m'); MAGENTA=$(printf '\033[35m'); RESET=$(printf '\033[0m')
else
  RED=""; GREEN=""; YELLOW=""; CYAN=""; MAGENTA=""; RESET=""
fi

section() { printf "\n%s========== %s ==========%s\n" "$MAGENTA" "$1" "$RESET"; }
log()     { printf "%s[INFO]%s %s\n" "$CYAN" "$RESET" "$1"; }
ok()      { printf "%s[ OK ]%s %s\n" "$GREEN" "$RESET" "$1"; }
warn()    { printf "%s[WARN]%s %s\n" "$YELLOW" "$RESET" "$1"; }
err()     { printf "%s[ERR ]%s %s\n" "$RED" "$RESET" "$1" >&2; }

trap 'err "ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน (Line $LINENO)."' ERR

cd /app || { err "ูุง ูููู ุงูุฏุฎูู ุฅูู /app"; exit 1; }

echo
section "On-Attach: Runtime Snapshot"

# ุชุญููู .env ุจุทุฑููุฉ ุขููุฉ
load_env_file() {
  local env_file="${1:-.env}"
  [[ ! -f "$env_file" ]] && return 0

  while IFS= read -r line || [[ -n "$line" ]]; do
    # ุฅุฒุงูุฉ ุงููุณุงูุงุช ูู ุงูุฃุทุฑุงู
    line="${line#"${line%%[![:space:]]*}"}"
    line="${line%"${line##*[![:space:]]}"}"
    # ุชุฌุงูู ุงููุงุฑุบ ูุงูุชุนูููุงุช
    [[ -z "$line" || "${line:0:1}" == "#" ]] && continue
    # ุชุฎุทู ุงูุฃุณุทุฑ ุบูุฑ ุงููุทุงุจูุฉ ููุดูู KEY=VALUE
    [[ "$line" != *"="* ]] && continue

    local key="${line%%=*}"
    local val="${line#*=}"

    # ุชูุธูู ุงูููุชุงุญ ูู ุงููุณุงูุงุช
    key="$(echo -n "$key" | sed -E 's/[[:space:]]+//g')"
    # ุงูุชุญูู ูู ุตูุงุญูุฉ ุงุณู ุงููุชุบูุฑ
    if ! [[ "$key" =~ ^[A-Za-z_][A-Za-z0-9_]*$ ]]; then
      continue
    fi

    # ุฅุฒุงูุฉ ุงูุชุนูููุงุช ุงูุฏุงุฎููุฉ ุฅู ูุงูุช ุงููููุฉ ุบูุฑ ูุญุงุทุฉ ุจุงูุชุจุงุณ
    if [[ "$val" != \"*\" && "$val" != \'*\' ]]; then
      val="${val%%#*}"
      val="${val%"${val##*[![:space:]]}"}"
    fi

    export "$key=$val"
  done < "$env_file"
}

load_env_file ".env" || true

DB_HOST="${DB_HOST:-${POSTGRES_HOST:-db}}"
DB_PORT="${DB_PORT:-5432}"
DB_USER="${POSTGRES_USER:-user}"
DB_NAME="${POSTGRES_DB:-mydb}"

log "ูุนูููุงุช ุฃุณุงุณูุฉ:"
echo "  - ุงููุณุงุฑ ุงูุญุงูู: $(pwd)"
echo "  - Python: $(python --version 2>/dev/null || echo 'N/A')"
echo "  - ุญุฒู ูุซุจูุชุฉ: $(pip list 2>/dev/null | wc -l | awk '{print $1}') (ุนุฏุฏ ุงูุฃุณุทุฑ ูู pip list)"

# ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช
if [ "${SKIP_ATTACH_DB_CHECK:-false}" = "true" ]; then
  warn "ุชุฎุทู ูุญุต ุฌุงูุฒูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช."
else
  log "ูุญุต ุฌุงูุฒูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช (ุณุฑูุน)..."
  if command -v pg_isready >/dev/null 2>&1; then
    if pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" >/dev/null 2>&1; then
      ok "PostgreSQL ุฌุงูุฒ."
    else
      warn "PostgreSQL ุบูุฑ ุฌุงูุฒ ุญุงููุงู."
    fi
  else
    warn "pg_isready ุบูุฑ ูุชููุฑ โ ุชุฎุทู ุงููุญุต."
  fi
fi

# ุญุงูุฉ ุงูุชุฑุญููุงุช
if [ "${SHOW_MIGRATION_STATUS:-true}" = "true" ]; then
  log "ูุญุต ุญุงูุฉ ุงูุชุฑุญููุงุช..."
  if command -v flask >/dev/null 2>&1 && flask --help 2>&1 | grep -q "db"; then
    if FLASK_APP="${FLASK_APP:-app.py}" flask db current 2>/dev/null; then
      ok "ุชู ุงุณุชุฑุฌุงุน ุญุงูุฉ ุงูุชุฑุญููุงุช."
    else
      warn "ุชุนุฐุฑ ุงุณุชุฑุฌุงุน ุญุงูุฉ ุงูุชุฑุญููุงุช (ุชุญูู ูู FLASK_APP)."
    fi
  else
    warn "flask db ุบูุฑ ูุชุงุญ."
  fi
else
  warn "ุชุฎุทู ุนุฑุถ ุญุงูุฉ ุงูุชุฑุญููุงุช (SHOW_MIGRATION_STATUS=false)."
fi

echo
ok "๐ ุฌุงูุฒ ููุนูู. ููููู ุชุดุบูู ุงูุชุทุจูู ุจุฃูุฑ ูุซู:"
echo "   flask run --host=0.0.0.0 --port=8000"
echo "   ุฃู: docker-compose up --build"
echo