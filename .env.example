# ======================================================================================
# ==          COGNIFORGE ENVIRONMENT PROTOCOL (v6.0 - Supabase Native)              ==
# ======================================================================================
# This file is the single source of truth for all secrets and configurations.
# It is designed for a Supabase-first architecture.

# --------------------------------------------------------------------------------------
# [CORE] APPLICATION & SECURITY
# --------------------------------------------------------------------------------------
FLASK_APP=run:app
FLASK_ENV=development
FLASK_DEBUG=1
SECRET_KEY="a-very-long-and-random-string-please-change-me-for-production"

# --------------------------------------------------------------------------------------
# [CRITICAL] DATABASE CONNECTION - SUPABASE
# --------------------------------------------------------------------------------------
# احصل على سلسلة الاتصال من لوحة تحكم Supabase:
# Get your connection string from Supabase Dashboard:
#   Project Settings > Database > Connection string > URI
#
# اختر نوع الاتصال | Choose connection type:
#   - Pooled (6543): موصى به للتطبيقات والتحميل العالي (Recommended)
#                    Recommended for applications and high load
#   - Direct (5432): للعمليات الكتابية والقراءة المباشرة
#                    For write operations and direct reads
#
# مهم جداً | Very Important:
#   ✅ أضف sslmode=require في نهاية السلسلة
#      Add sslmode=require at the end of the connection string
#   ✅ إذا كانت كلمة المرور تحتوي على رموز خاصة مثل @ أو # قم بترميزها
#      If password contains special characters like @ or #, percent-encode them
#      Example: @ becomes %40, # becomes %23
#
# أمثلة | Examples:
#   Pooled (Recommended): postgresql://postgres:YOUR_PASSWORD@YOUR-PROJECT-HOST.pooler.supabase.co:6543/postgres?sslmode=require
#   Direct: postgresql://postgres:YOUR_PASSWORD@YOUR-PROJECT-HOST.supabase.co:5432/postgres?sslmode=require
DATABASE_URL="postgresql://postgres:[YOUR-USERNAME].[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@[YOUR-DB-HOST].pooler.supabase.co:6543/postgres?sslmode=require"

# --------------------------------------------------------------------------------------
# [OPTIONAL] SUPABASE CLIENT SDK (for advanced integrations)
# --------------------------------------------------------------------------------------
# هذه المتغيرات اختيارية للتكاملات المتقدمة خارج SQLAlchemy
# These variables are optional for advanced integrations outside SQLAlchemy
#
# احصل عليها من | Get them from:
#   Project Settings > API > Project URL & API Keys
#
# SUPABASE_URL: رابط مشروعك في Supabase | Your Supabase project URL
SUPABASE_URL="https://YOUR-PROJECT-REF.supabase.co"

# SUPABASE_ANON_KEY: المفتاح العام للمستخدم النهائي (آمن للعملاء)
#                    Public anon key for end users (safe for clients)
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

# SUPABASE_SERVICE_ROLE_KEY: مفتاح الخدمة (سري جداً - استخدم بحذر!)
#                             Service role key (VERY SECRET - use with caution!)
#                             يمنح صلاحيات كاملة | Grants full permissions
# SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

# --------------------------------------------------------------------------------------
# [CRITICAL] AI ENGINE
# --------------------------------------------------------------------------------------
# Your key for OpenRouter, the gateway to all LLMs.
OPENROUTER_API_KEY="sk-or-v1-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# The default model used by Maestro for tactical reasoning.
DEFAULT_AI_MODEL="anthropic/claude-3.7-sonnet:thinking"
LOW_COST_MODEL="openai/gpt-4o-mini"

# --------------------------------------------------------------------------------------
# [CORE] AUTOMATIC SEEDING PROTOCOL
# --------------------------------------------------------------------------------------
# Used by the `flask users init-admin` command.
ADMIN_EMAIL="admin@example.com"
ADMIN_PASSWORD="strong-password-here"
ADMIN_NAME="Admin User"

# ======================================================================================
# ==                   OVERMIND / PLANNER HYPER-CONFIGURATION                       ==
# ======================================================================================
# This section provides fine-grained control over the Overmind planning and execution engine.
# Only change these if you are an expert.

# ---------- [1] Planner Intelligence & Behavior ----------
PLANNER_ENABLE_ROLE_DERIVATION=1       # Allow planner to assign roles to files.
PLANNER_ENABLE_SECTION_INFERENCE=1     # Allow planner to infer document sections.
PLANNER_ENABLE_CODE_HINTS=1            # Provide hints for code-related generation.
PLANNER_STRICT_WRITE_ENFORCE=1         # Ensure every target file in the objective is written to.
PLANNER_SMART_FILENAME=1               # Automatically clean and generate filenames.
PLANNER_ALLOW_SUBDIRS=1                # Allow planner to create files in subdirectories.

# ---------- [2] Chunking & Streaming Engine ----------
PLANNER_STREAMING_ENABLE=1             # Enable multi-task streaming for large content.
PLANNER_ALLOW_APPEND_TOOL=auto         # 'auto', '1' (force), or '0' (disable).
PLANNER_MAX_CHUNKS=50                  # Max generation tasks for a single file.
PLANNER_CHUNK_SIZE_HINT=1200           # Target character count per chunk.
PLANNER_FAST_SINGLE_THRESHOLD=1800     # Objectives smaller than this may use a single task.

# ---------- [3] Agent Tools Runtime Behavior ----------
AGENT_TOOLS_PROJECT_ROOT=/app          # The root directory inside the container.
AGENT_TOOLS_LOG_LEVEL=INFO
AGENT_TOOLS_MAX_WRITE_BYTES=5000000
AGENT_TOOLS_MAX_READ_BYTES=800000
AGENT_TOOLS_CREATE_MISSING=1           # Allow tools to create files that don't exist.
AGENT_TOOLS_CREATE_ALLOWED_EXTS=.md,.txt,.json,.log

# ---------- [4] System & Logging ----------
OVERMIND_LOG_DEBUG=1                   # Set to 0 in production.
LLM_PLANNER_LOG_LEVEL=DEBUG            # Set to INFO in production.
LOG_FORMAT_JSON=0                      # Set to 1 for structured logging.

# ---------- [5] Global Guardrails ----------
PLANNER_MAX_FILES=12                   # Max number of files a single mission can target.
PLANNER_MAX_TASKS_GLOBAL=400           # Hard limit on total tasks in a single plan.
DISABLED_TOOLS=delete_file             # Prevent the AI from using the delete_file tool for safety.

# --------------------------------------------------------------------------------------
# [OPTIONAL] DEVCONTAINER / CODESPACES BEHAVIOR CONTROL
# --------------------------------------------------------------------------------------
# These variables control the behavior of scripts in .devcontainer/
# Useful when setting up in GitHub Codespaces or local Dev Containers
#
# WAIT_FOR_DB=0                        # Skip waiting for database (for external Supabase)
# RUN_MIGRATIONS_ON_START=0            # Skip auto-migrations on container start
# RUN_APP_ON_START=0                   # Skip auto-starting the app
# SKIP_PIP_INSTALL=0                   # Skip pip install (when already in Docker image)

# ======================================================================================
# ==                         END OF CONFIGURATION                                     ==
# ======================================================================================

# ======================================================================================
# ==                   OVERMIND / PLANNER HYPER-CONFIGURATION                       ==
# ======================================================================================
# This section provides fine-grained control over the Overmind planning and execution engine.
# Only change these if you are an expert.

# ---------- [1] Planner Intelligence & Behavior ----------
PLANNER_ENABLE_ROLE_DERIVATION=1       # Allow planner to assign roles to files.
PLANNER_ENABLE_SECTION_INFERENCE=1     # Allow planner to infer document sections.
PLANNER_ENABLE_CODE_HINTS=1            # Provide hints for code-related generation.
PLANNER_STRICT_WRITE_ENFORCE=1         # Ensure every target file in the objective is written to.
PLANNER_SMART_FILENAME=1               # Automatically clean and generate filenames.
PLANNER_ALLOW_SUBDIRS=1                # Allow planner to create files in subdirectories.

# ---------- [2] Chunking & Streaming Engine ----------
PLANNER_STREAMING_ENABLE=1             # Enable multi-task streaming for large content.
PLANNER_ALLOW_APPEND_TOOL=auto         # 'auto', '1' (force), or '0' (disable).
PLANNER_MAX_CHUNKS=50                  # Max generation tasks for a single file.
PLANNER_CHUNK_SIZE_HINT=1200           # Target character count per chunk.
PLANNER_FAST_SINGLE_THRESHOLD=1800     # Objectives smaller than this may use a single task.

# ---------- [3] Agent Tools Runtime Behavior ----------
AGENT_TOOLS_PROJECT_ROOT=/app          # The root directory inside the container.
AGENT_TOOLS_LOG_LEVEL=INFO
AGENT_TOOLS_MAX_WRITE_BYTES=5000000
AGENT_TOOLS_MAX_READ_BYTES=800000
AGENT_TOOLS_CREATE_MISSING=1           # Allow tools to create files that don't exist.
AGENT_TOOLS_CREATE_ALLOWED_EXTS=.md,.txt,.json,.log

# ---------- [4] System & Logging ----------
OVERMIND_LOG_DEBUG=1                   # Set to 0 in production.
LLM_PLANNER_LOG_LEVEL=DEBUG            # Set to INFO in production.
LOG_FORMAT_JSON=0                      # Set to 1 for structured logging.

# ---------- [5] Global Guardrails ----------
PLANNER_MAX_FILES=12                   # Max number of files a single mission can target.
PLANNER_MAX_TASKS_GLOBAL=400           # Hard limit on total tasks in a single plan.
DISABLED_TOOLS=delete_file             # Prevent the AI from using the delete_file tool for safety.

# ======================================================================================
# ==                         END OF CONFIGURATION                                     ==
# ======================================================================================
