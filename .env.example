# =============================================================================
# CogniForge Environment Configuration Template
# =============================================================================
# This is a template file. Copy it to .env and configure with your actual values.
# 
# Quick Setup:
#   1. Copy this file: cp .env.example .env
#   2. Update DATABASE_URL with your Supabase connection string
#   3. Add your API keys (OPENROUTER_API_KEY)
#   4. Optionally customize other settings
#
# Platform Support: Works on GitHub Codespaces, Gitpod, AWS, Azure, GCP, and Local
# =============================================================================

# ---------------------------------
# RUNTIME MODE & CORE FLASK
# ---------------------------------
# Set to 1 for development mode, 0 for production
FLASK_DEBUG=1

# Secret key for Flask sessions (CHANGE THIS IN PRODUCTION!)
# Generate a secure key: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY="dev-secret-key-CHANGE-THIS-IN-PRODUCTION"

# Overmind environment (dev/staging/production)
OVERMIND_ENV=dev

# ---------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# ---------------------------------
# IMPORTANT: You MUST configure your database connection here!
#
# Option 1: Supabase (Recommended for Cloud Platforms)
# Get your connection string from: https://supabase.com/dashboard/project/_/settings/database
# Format: postgresql://postgres.[PROJECT-REF]:[PASSWORD]@aws-0-[REGION].pooler.supabase.com:5432/postgres
DATABASE_URL=postgresql://postgres:your-password@your-host.supabase.co:5432/postgres

# Optional: Supabase API Configuration (for direct Supabase features)
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_KEY=your-supabase-anon-key-here

# ---------------------------------
# AI / MODEL CONFIGURATION (REQUIRED)
# ---------------------------------
# OpenRouter API Key (Get from: https://openrouter.ai/keys)
# This is REQUIRED for AI features to work
OPENROUTER_API_KEY=sk-or-v1-your-openrouter-api-key-here

# Default AI model for primary operations
DEFAULT_AI_MODEL=openai/gpt-4o

# Low-cost model for less critical operations
LOW_COST_MODEL=openai/gpt-4o-mini

# ---------------------------------
# ADMIN USER CONFIGURATION
# ---------------------------------
# These credentials will be used to create the initial admin user
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=changeme123
ADMIN_NAME=Admin User

# ---------------------------------
# LOGGING & OBSERVABILITY
# ---------------------------------
# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
AGENT_TOOLS_LOG_LEVEL=INFO
LLM_PLANNER_LOG_LEVEL=DEBUG
PLANNING_FACTORY_LOG_LEVEL=INFO
OVERMIND_LOG_DEBUG=1

# Log formatting options
LOG_FORMAT_JSON=0
LOG_REQUEST_ID_ENABLE=1
LOG_INCLUDE_TIMESTAMPS=1

# ---------------------------------
# PLATFORM-SPECIFIC NOTES
# ---------------------------------
# GitHub Codespaces: No special configuration needed
# Gitpod: No special configuration needed
# AWS/Azure/GCP: Ensure DATABASE_URL points to your cloud database
# Local Development: Can use Docker Compose database or external Supabase
#
# For detailed setup instructions, see:
# - SETUP_GUIDE.md
# - MULTI_PLATFORM_SETUP.md
# ============================================================================= 