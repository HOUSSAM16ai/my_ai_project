# ======================================================================================
# CogniForge - Gitpod Constitution (v3.0 - Native Execution)
# ======================================================================================
# This configuration runs database commands NATIVELY in Gitpod to bypass
# complex Docker networking issues, ensuring a stable connection to Supabase.

ports:
  # Port for the main Flask web application (running inside Docker).
  - port: 5000
    name: "Flask Web App"
    onOpen: open-preview
    visibility: public

  # Port for the FastAPI AI service (running inside Docker).
  - port: 8001
    name: "AI Service"
    onOpen: ignore
    visibility: public

tasks:
  - name: "Initial Setup & Bootstrap"
    # This runs ONCE when the workspace is created.
    init: |
      echo "üöÄ Initializing CogniForge Environment..."
      
      # 1. Create .env from template.
      if [ ! -f .env ]; then
        cp .env.example .env
        echo "‚úÖ Created .env file. ‚ö†Ô∏è PLEASE CONFIGURE YOUR DATABASE_URL NOW."
      fi
      
      # 2. Install all Python dependencies into the main Gitpod environment.
      echo "üì¶ Installing Python packages..."
      pip install --no-cache-dir -r requirements.txt
      
      echo "‚úÖ Initial setup complete! The environment is ready."

    # This runs EVERY time you start the workspace.
    command: |
      echo "üéØ CogniForge Workspace is ready!"
      echo "=================================================="
      echo "‚ö†Ô∏è  CRITICAL: Configure DATABASE_URL in .env first!"
      echo "=================================================="
      echo ""
      echo "STEP 1: Open .env and set your Supabase DATABASE_URL."
      echo ""
      echo "STEP 2: Start background services (Docker):"
      echo "  docker-compose up --build -d"
      echo ""
      echo "STEP 3: Run database migrations (NATIVELY):"
      echo "  flask db upgrade"
      echo ""
      echo "STEP 4: Create admin user (NATIVELY):"
      echo "  flask users create-admin"
      echo ""
      echo "=================================================="
      
vscode:
  extensions:
    - ms-python.python
    - ms-python.vscode-pylance
    - github.copilot
    - ms-azuretools.vscode-docker
    - esbenp.prettier-vscode
    - ms-python.black-formatter
    - mtxr.sqltools
    - mtxr.sqltools-driver-pg

github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: false
    addCheck: true
    addComment: false
    addBadge: false
