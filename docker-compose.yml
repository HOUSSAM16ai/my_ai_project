# ======================================================================================
# ==          COGNIFORGE UNIFIED ORCHESTRATION BLUEPRINT (v5.1 - Local DB)            ==
# ======================================================================================
version: '3.8'

services:
  # ----------------------------------------------------------------------------------
  # The Local Database Service
  # ----------------------------------------------------------------------------------
  db:
    image: supabase/postgres:15.1.0.118
    container_name: cogniforge-db
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - appnet
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ----------------------------------------------------------------------------------
  # The Web Service (Main App)
  # ----------------------------------------------------------------------------------
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-frontend
    init: true
    restart: unless-stopped
    env_file:
      - .env
    command: gunicorn "run:app" --bind=0.0.0.0:5000 --worker-tmp-dir /app/tmp
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    networks:
      - appnet
    depends_on:
      db:
        condition: service_healthy # Wait for the DB to be ready before starting the app

  # ----------------------------------------------------------------------------------
  # The AI Service
  # ----------------------------------------------------------------------------------
  ai_service:
    build:
      context: ./ai_service
    container_name: fastapi-ai-service
    init: true
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./ai_service:/code
    command: sh -c "./entrypoint.sh"
    ports:
      - "8001:8000"
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
