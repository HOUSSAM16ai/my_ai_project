# docker-compose.yml - v4.0 (Fully Standardized on Bullseye)
# هذا الملف ينسق تشغيل نظام خدمات مصغرة متجانس ومقاوم للمستقبل.

services:
  # --- 1. خدمة الواجهة الأمامية (Flask) ---
  # مبنية على Bullseye من خلال Dockerfile الخاص بها.
  web:
    build:
      context: . 
    container_name: flask-frontend
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db 
    depends_on:
      db:
        condition: service_healthy

  # --- 2. خدمة الذكاء الاصطناعي (FastAPI) ---
  # مبنية على Bullseye من خلال Dockerfile الخاص بها.
  ai_service:
    build:
      context: ./ai_service
    container_name: fastapi-ai-service
    ports:
      - "8000:8000"
    volumes:
      - ./ai_service:/code
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db

  # --- 3. خدمة قاعدة البيانات (تمت الترقية إلى Bullseye) ---
  # تستخدم الآن الصورة الرسمية المبنية على Bullseye لتحقيق التجانس.
  db:
    image: postgres:15-bullseye # <-- هذا هو التعديل الوحيد والمهم
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: