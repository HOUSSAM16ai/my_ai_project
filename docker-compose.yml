# docker-compose.yml (The Loop-Breaker Protocol - TEMPORARY)
services:
  # Migrations service remains unchanged.
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-migrations
    init: true
    command: ["flask", "db", "upgrade"]
    env_file:
      - .env
    networks: [appnet]

  # AI service - DEPENDENCIES TEMPORARILY DISABLED
  ai_service:
    build:
      context: ./ai_service
    container_name: fastapi-ai-service
    init: true
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./ai_service:/code
    command: sh -c "./entrypoint.sh"
    # --- [THE LOOP-BREAKER FIX] ---
    # We comment out the 'depends_on' section to break the chain.
    # depends_on:
    #   migrations:
    #     condition: service_completed_successfully
    ports:
      - "8001:8000"
    networks: [appnet]

  # Web service - DEPENDENCIES TEMPORARILY DISABLED
  web:
    build:
      context: .
    container_name: flask-frontend
    init: true
    restart: unless-stopped
    env_file:
      - .env
    command: gunicorn "run:app" --bind=0.0.0.0:5000 --worker-tmp-dir /app/tmp
    volumes:
      - .:/app
    # --- [THE LOOP-BREAKER FIX] ---
    # We comment out the 'depends_on' section to break the chain.
    # depends_on:
    #   migrations:
    #     condition: service_completed_successfully
    #   ai_service:
    #     condition: service_started
    ports:
      - "5000:5000"
    networks: [appnet]

volumes: {}

networks:
  appnet:
    driver: bridge