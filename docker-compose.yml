# docker-compose.yml (Cloud-Native & Clean Architecture v7.0)
services:
  # Migrations will run against the Supabase DB via the Session Pooler.
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-migrations
    init: true
    command: ["flask", "db", "upgrade"]
    env_file:
      - .env
    networks: [appnet]

  # AI service remains on its own network, depending on the main services.
  ai_service:
    build:
      context: ./ai_service
    container_name: fastapi-ai-service
    init: true
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./ai_service:/code
    command: sh -c "./entrypoint.sh"
    depends_on:
      # It depends on the successful completion of the migrations.
      migrations:
        condition: service_completed_successfully
    ports:
      - "8001:8000"
    networks: [appnet]

  # Web service connects to Supabase and depends on other services.
  web:
    build:
      context: .
    container_name: flask-frontend
    init: true
    restart: unless-stopped
    env_file:
      - .env
    command: gunicorn "run:app" --bind=0.0.0.0:5000 --worker-tmp-dir /app/tmp
    volumes:
      - .:/app
    depends_on:
      migrations:
        condition: service_completed_successfully
      ai_service:
        condition: service_started
    ports:
      - "5000:5000"
    networks: [appnet]

volumes: {}

networks:
  appnet:
    driver: bridge