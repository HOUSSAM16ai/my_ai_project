# ======================================================================================
# SONARQUBE CONFIGURATION - Superhuman Edition
# ======================================================================================
# This configuration sets up SonarQube/SonarCloud for world-class code quality analysis
# Standards: Exceeding Google, Facebook, Microsoft, OpenAI quality gates
#
# Setup:
#   1. Create account at https://sonarcloud.io (free for open source)
#   2. Import your GitHub repository
#   3. Copy the project key and add to GitHub Secrets: SONAR_TOKEN
#   4. Update sonar.projectKey below
#   5. Add to CI/CD workflow
# ======================================================================================

# Project Identification
sonar.projectKey=HOUSSAM16ai_my_ai_project
sonar.organization=houssam16ai

# Project Information
sonar.projectName=CogniForge
sonar.projectVersion=2.0.0

# Source Code
sonar.sources=app
sonar.tests=tests

# Python Configuration
sonar.python.version=3.12

# Exclusions
sonar.exclusions=\
  **/migrations/**,\
  **/node_modules/**,\
  **/__pycache__/**,\
  **/venv/**,\
  **/.venv/**,\
  **/htmlcov/**,\
  **/dist/**,\
  **/build/**,\
  **/*.egg-info/**

# Test Exclusions (don't analyze test code)
sonar.test.exclusions=\
  **/tests/**,\
  **/test_*.py

# Coverage
sonar.python.coverage.reportPaths=coverage.xml
sonar.coverage.exclusions=\
  **/tests/**,\
  **/test_*.py,\
  **/conftest.py,\
  **/__init__.py

# ======================================================================================
# QUALITY GATES - Superhuman Standards
# ======================================================================================

# Code Coverage
# Minimum: 30% (current enforcement)
# Target: 80% (progressive improvement)
sonar.coverage.minCoverage=30

# Maintainability
# Technical Debt Ratio: Max 5% (industry standard)
sonar.technicalDebtRatio.max=5.0

# Reliability
# Bugs: Zero tolerance for critical/blocker bugs
sonar.reliability.rating=A

# Security
# Security Rating: A (no vulnerabilities)
sonar.security.rating=A
# Security Hotspots: All must be reviewed
sonar.securityHotspots.minReviewRatio=100

# Duplications
# Maximum 3% code duplication (Google standard: 5%)
sonar.duplications.max=3.0

# Complexity
# Cyclomatic complexity per function: Max 15 (we enforce 20 via Xenon)
sonar.complexity.max=15

# ======================================================================================
# CODE SMELL THRESHOLDS
# ======================================================================================

# Code Smells
# Rating: A or B acceptable
sonar.maintainability.rating=B

# Lines of Code per File
sonar.python.file.maxLinesOfCode=500

# Functions
sonar.python.function.maxLinesOfCode=50
sonar.python.function.maxParameters=7

# Classes
sonar.python.class.maxLinesOfCode=500

# ======================================================================================
# SECURITY RULES
# ======================================================================================

# Security Hotspots - All must be reviewed
sonar.security.hotspots.review.status=TO_REVIEW

# OWASP Top 10 Coverage
sonar.security.owasp.enabled=true
sonar.security.owasp.categories=\
  a1-injection,\
  a2-broken-authentication,\
  a3-sensitive-data-exposure,\
  a4-xxe,\
  a5-broken-access-control,\
  a6-security-misconfiguration,\
  a7-xss,\
  a8-insecure-deserialization,\
  a9-known-vulnerabilities,\
  a10-insufficient-logging

# SANS Top 25 Coverage
sonar.security.sans.enabled=true

# CWE Top 25 Coverage
sonar.security.cwe.enabled=true

# ======================================================================================
# CUSTOM QUALITY PROFILES
# ======================================================================================

# Python Quality Profile
# Use "Sonar way" as base and extend with custom rules
sonar.python.profile=Sonar way

# Additional Rules (if using custom profile)
# sonar.python.pylint.enabled=true
# sonar.python.bandit.enabled=true
# sonar.python.flake8.enabled=true

# ======================================================================================
# ANALYSIS PARAMETERS
# ======================================================================================

# SCM (Source Control)
sonar.scm.provider=git
sonar.scm.disabled=false

# Encoding
sonar.sourceEncoding=UTF-8

# Branch Analysis
sonar.branch.name=${GITHUB_REF_NAME}

# Pull Request Analysis
sonar.pullrequest.key=${GITHUB_PR_NUMBER}
sonar.pullrequest.branch=${GITHUB_HEAD_REF}
sonar.pullrequest.base=${GITHUB_BASE_REF}

# ======================================================================================
# REPORTING
# ======================================================================================

# Working Directory
sonar.working.directory=.scannerwork

# Log Level
sonar.log.level=INFO

# Verbose Mode (for debugging)
# sonar.verbose=true

# ======================================================================================
# INTEGRATION WITH OTHER TOOLS
# ======================================================================================

# External Issues (from other tools)
# sonar.externalIssuesReportPaths=bandit-report.json

# Test Execution Reports
sonar.python.xunit.reportPath=junit.xml

# Coverage Reports
sonar.python.coverage.reportPaths=coverage.xml

# ======================================================================================
# QUALITY GATE CONDITIONS (For SonarCloud Dashboard)
# ======================================================================================
#
# Recommended Quality Gate Conditions:
#
# ON NEW CODE (Pull Requests):
# ✅ Coverage on New Code: ≥ 80%
# ✅ Duplicated Lines on New Code: ≤ 3%
# ✅ Maintainability Rating on New Code: A
# ✅ Reliability Rating on New Code: A
# ✅ Security Rating on New Code: A
# ✅ Security Hotspots Reviewed: 100%
#
# ON OVERALL CODE:
# ✅ Coverage: ≥ 30% (progressive: target 80%)
# ✅ Duplicated Lines: ≤ 3%
# ✅ Maintainability Rating: B or better
# ✅ Reliability Rating: A
# ✅ Security Rating: A
# ✅ Security Hotspots: 100% reviewed
#
# ======================================================================================

# ======================================================================================
# USAGE IN CI/CD
# ======================================================================================
#
# GitHub Actions Integration Example:
#
# - name: SonarCloud Scan
#   uses: SonarSource/sonarcloud-github-action@master
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   with:
#     args: >
#       -Dsonar.projectKey=HOUSSAM16ai_my_ai_project
#       -Dsonar.organization=houssam16ai
#
# ======================================================================================

# ======================================================================================
# NOTES
# ======================================================================================
#
# 1. SonarCloud is FREE for public repositories
# 2. Analysis runs automatically on every PR and push to main
# 3. Quality gates prevent merging if standards not met
# 4. Dashboard provides detailed code quality insights
# 5. Tracks technical debt and suggests improvements
# 6. Integrates with GitHub for inline PR comments
#
# Getting Started:
#   1. Sign up at https://sonarcloud.io
#   2. Import your GitHub repository
#   3. Add SONAR_TOKEN to GitHub Secrets
#   4. Update sonar.projectKey above
#   5. Push changes and see analysis results
#
# ======================================================================================
