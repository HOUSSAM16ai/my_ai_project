{
  "//": "======================================================================================",
  "//": "==     Cursor IDE - GitHub MCP Server Configuration (Professional Edition)      ==",
  "//": "======================================================================================",
  "//": "This configuration is specifically optimized for Cursor IDE",
  "//": "enabling seamless GitHub integration for AI-powered coding assistance.",
  "//": "======================================================================================",

  "mcp": {
    "inputs": [
      {
        "type": "promptString",
        "id": "github_token",
        "description": "GitHub Personal Access Token - Required for GitHub API access",
        "password": true,
        "required": true,
        "validation": {
          "pattern": "^(ghp_[a-zA-Z0-9]{36}|github_pat_[a-zA-Z0-9_]{82})$",
          "message": "Must be a valid GitHub Personal Access Token (classic: ghp_... or fine-grained: github_pat_...)"
        },
        "helpUrl": "https://github.com/settings/tokens",
        "placeholder": "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      }
    ],
    "servers": {
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--network",
          "host",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "ghcr.io/github/github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}"
        },
        "disabled": false,
        "alwaysAllow": [],
        "metadata": {
          "displayName": "GitHub MCP Server",
          "description": "Professional GitHub integration providing comprehensive API access for repository management, issue tracking, pull requests, code search, and GitHub Actions",
          "icon": "github",
          "author": "GitHub",
          "homepage": "https://github.com/github/github-mcp-server",
          "license": "MIT",
          "tags": [
            "github",
            "git",
            "version-control",
            "repository",
            "issues",
            "pull-requests",
            "actions",
            "code-search"
          ],
          "capabilities": {
            "repositories": {
              "read": true,
              "write": true,
              "create": true,
              "delete": false
            },
            "issues": {
              "read": true,
              "write": true,
              "create": true,
              "close": true,
              "comment": true
            },
            "pullRequests": {
              "read": true,
              "write": true,
              "create": true,
              "merge": true,
              "review": true
            },
            "codeSearch": {
              "search": true,
              "indexing": true
            },
            "actions": {
              "read": true,
              "trigger": true
            }
          },
          "requiredScopes": [
            "repo",
            "read:org",
            "workflow"
          ],
          "optionalScopes": [
            "admin:repo_hook",
            "read:discussion",
            "write:discussion"
          ]
        },
        "healthCheck": {
          "enabled": true,
          "interval": 60000,
          "timeout": 5000,
          "retries": 3
        },
        "logging": {
          "enabled": true,
          "level": "info",
          "file": "/tmp/mcp-github-server.log"
        }
      }
    },
    "globalSettings": {
      "timeout": 30000,
      "maxConcurrentRequests": 10,
      "retryPolicy": {
        "maxAttempts": 3,
        "backoffMultiplier": 2,
        "initialDelay": 1000
      },
      "caching": {
        "enabled": true,
        "ttl": 300000,
        "maxSize": 100
      }
    }
  },

  "//": "======================================================================================",
  "//": "Advanced Configuration Options",
  "//": "======================================================================================",
  "advanced": {
    "docker": {
      "pullPolicy": "IfNotPresent",
      "network": "host",
      "resourceLimits": {
        "memory": "512m",
        "cpus": "1.0"
      },
      "restartPolicy": "on-failure",
      "maxRestarts": 3
    },
    "monitoring": {
      "enabled": true,
      "metricsPort": 9090,
      "healthCheckEndpoint": "/health"
    }
  },

  "//": "======================================================================================",
  "//": "Security Configuration | ÿ™ŸÉŸàŸäŸÜ ÿßŸÑÿ£ŸÖÿßŸÜ",
  "//": "======================================================================================",
  "security": {
    "tokenStorage": "encrypted",
    "tokenRotation": {
      "enabled": false,
      "reminder": "Consider rotating tokens every 90 days"
    },
    "allowedOperations": [
      "read",
      "write",
      "create"
    ],
    "restrictedOperations": [
      "delete_repository",
      "transfer_repository"
    ],
    "auditLogging": {
      "enabled": true,
      "path": "/tmp/mcp-audit.log",
      "includeTokenHash": true
    }
  },

  "//": "======================================================================================",
  "//": "Usage Instructions | ÿ™ÿπŸÑŸäŸÖÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ",
  "//": "======================================================================================",
  "//": "",
  "//": "üìù How to Get Your GitHub Personal Access Token:",
  "//": "   1. Go to: https://github.com/settings/tokens",
  "//": "   2. Click 'Generate new token' ‚Üí 'Generate new token (classic)'",
  "//": "   3. Select scopes: repo, read:org, workflow",
  "//": "   4. Copy the generated token (starts with ghp_)",
  "//": "   5. Add to .env file: GITHUB_PERSONAL_ACCESS_TOKEN=ghp_...",
  "//": "",
  "//": "üîê Security Best Practices:",
  "//": "   ‚úÖ Never commit tokens to Git",
  "//": "   ‚úÖ Use environment variables (.env file)",
  "//": "   ‚úÖ Rotate tokens every 90 days",
  "//": "   ‚úÖ Use minimal required scopes",
  "//": "   ‚úÖ Enable token expiration",
  "//": "",
  "//": "üöÄ Features Available:",
  "//": "   ‚Ä¢ Repository management (read, write, create)",
  "//": "   ‚Ä¢ Issue tracking (create, comment, close)",
  "//": "   ‚Ä¢ Pull request operations (create, review, merge)",
  "//": "   ‚Ä¢ Code search across repositories",
  "//": "   ‚Ä¢ GitHub Actions workflow management",
  "//": "   ‚Ä¢ Organization and team management",
  "//": "",
  "//": "üìö Documentation:",
  "//": "   ‚Ä¢ GitHub MCP Server: https://github.com/github/github-mcp-server",
  "//": "   ‚Ä¢ Model Context Protocol: https://modelcontextprotocol.io",
  "//": "   ‚Ä¢ CogniForge MCP Guide: See MCP_INTEGRATION_GUIDE.md",
  "//": "",
  "//": "======================================================================================"
}
